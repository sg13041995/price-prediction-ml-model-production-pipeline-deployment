# Tox is a generic virtualenv management and test command line tool. 
# Its goal is to standardize testing in Python. 

# Using Tox we can do the following (on multiple operating systems):
# Eliminate PYTHONPATH challenges when running scripts/tests
# Eliminate virtualenv setup confusion
# Streamline steps such as model training, model publishing

# ==================================================
# How to run tox
# Example environment: [testenv:test_package]
# ==================================================
# >>> tox -e test_package
# -e means we will specify some env
# Before executing the env specific commands it will attempt to install the dependencies first

# Anything we see within the [square btackets] it is separate tox environment
# These will be set up in the .tox dir

# This section runs commands from other tox environments as specified in the envlist variable
[tox]
# Updated min_version from 4 to 3
min_version = 3
envlist = test_package, checks
skipsdist = True

# This is a default base env
# Other environments has inherited from this
# Example: [testenv:test_package] etc.
[testenv]
basepython = python
install_command = pip install {opts} {packages}
allowlist_externals = train

setenv =
	PYTHONPATH=.
	PYTHONHASHSEED=0

# Inherited env
[testenv:test_package]
envdir = {toxworkdir}/test_package
deps =
	# -r with no space is tox syntax
	-r{toxinidir}/requirements/test_requirements.txt
commands=
	# We are running two commads
	# Command 1
	python regression_model/train_pipeline.py
	
	# Command 2
	# Single command has broken down into multiple lines using \
	pytest \
	-s \
	-vv \
	# Directory that will be triggered with pytest
	{posargs:tests/}

# Inheried env
[testenv:train]
envdir = {toxworkdir}/test_package
deps =
     {[testenv:test_package]deps}
commands=
	python regression_model/train_pipeline.py

# Inherited env
[testenv:checks]
envdir = {toxworkdir}/checks
deps =
	-r{toxinidir}/requirements/typing_requirements.txt
commands =
	flake8 regression_model tests
	isort regression_model tests
	{posargs:mypy regression_model}

# Flake env
[flake8]
exclude = .git,env
max-line-length = 100